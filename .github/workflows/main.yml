name: Create windows application

on:
  push:
    branches: [ "2.0" ]
  pull_request:
    branches: [ "2.0" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    
    - name: install packages
      run: | 
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: build application
      run: | 
        python -m PyInstaller --onefile --noconsole --icon="assets\img\relACs.ico" --name="relACs" --uac-admin main.py
        
#     - name: Create Release
#       id: create_release
#       uses: actions/create-release@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         tag_name: ${{ github.ref }}
#         release_name: Release ${{ github.ref }}
#         draft: false
#         prerelease: false
#     - name: Upload Release Asset
#       id: upload-release-asset 
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#         asset_path: ./dist/relACs.exe
#         asset_name: relACs.exe
#         asset_content_type: application/x-msdownload

    - uses: actions/upload-artifact@v2
      with:
        name: relACs.exe
        path: ./dist/relACs.exe
        
    - name: Inno Setup
      run: |
        cd dist
        iscc ".\relACs.iss"
        ls
 
 
 
#     - name: deploy release
#       uses: softprops/action-gh-release@v1
#       with:
#         files: ./desc/relACs.exe
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    
    
    

#     - name: Package Application
#       uses: JackMcKew/pyinstaller-action-windows@main
#       with:
#         path: src

#     - uses: actions/upload-artifact@v2
#       with:
#         name: name-of-artifact
#         path: src/dist/windows
